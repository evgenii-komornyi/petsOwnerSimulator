package com.sinovdeath.PetsOwnerSimulator.helpers.generators.animals;

import com.sinovdeath.PetsOwnerSimulator.constants.Constants;
import com.sinovdeath.PetsOwnerSimulator.entities.home.room.Room;
import com.sinovdeath.PetsOwnerSimulator.entities.pet.Animal;
import com.sinovdeath.PetsOwnerSimulator.entities.pet.Animation;
import com.sinovdeath.PetsOwnerSimulator.entities.pet.Cat;
import com.sinovdeath.PetsOwnerSimulator.entities.pet.Image;
import com.sinovdeath.PetsOwnerSimulator.entities.pet.RoomPet;
import com.sinovdeath.PetsOwnerSimulator.entities.stats.MoodStats;
import com.sinovdeath.PetsOwnerSimulator.entities.stats.Stats;
import com.sinovdeath.PetsOwnerSimulator.entities.stats.StatsIncreasing;
import com.sinovdeath.PetsOwnerSimulator.enums.AnimalType;
import com.sinovdeath.PetsOwnerSimulator.enums.AnimationType;
import com.sinovdeath.PetsOwnerSimulator.enums.UriType;
import com.sinovdeath.PetsOwnerSimulator.helpers.generators.Generator;

import java.util.ArrayList;
import java.util.List;

public class CatsGenerator {
    public static List<Animal> generateCats() {
        List<Animal> cats = new ArrayList<>();
        String catLick = Generator.generatePathToFile(Constants.SHORT_PATH_FORMAT, Constants.ASSETS_TONGUE_FOLDER, AnimationType.LICK.getAnimationType(), Constants.ANIMATION_EXT);
        Animation lickAnimation = new Animation(catLick);

        Animal coffee = new Cat();
        coffee.setId("cat-1");
        coffee.setName("Coffee");
        String coffeeName = coffee.getName().toLowerCase();
        String coffeeRegularUri = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, coffeeName, coffeeName, Constants.IMAGE_EXT);
        String coffeeSad = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, coffeeName, UriType.SAD.getUriValue(), Constants.IMAGE_EXT);
        String coffeeSleeping = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, coffeeName, UriType.SLEEPING.getUriValue(), Constants.IMAGE_EXT);
        String coffeeBlinking = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, coffeeName, UriType.BLINKING.getUriValue(), Constants.IMAGE_EXT);
        String coffeeDead = Generator.generatePathToFile(Constants.SHORT_PATH_FORMAT, Constants.ASSETS_DEAD_FOLDER, UriType.SHORT_HAIR.getUriValue(), Constants.IMAGE_EXT);
        Image coffeeImage = new Image(coffeeRegularUri, coffeeSad, coffeeSleeping, coffeeDead, coffeeBlinking);
        coffee.setAnimation(lickAnimation);
        coffee.setImg(coffeeImage);
        Stats coffeeMaxValues = new Stats();
        coffeeMaxValues.setHealth(720);
        coffeeMaxValues.setSatiety(720);
        coffeeMaxValues.setMood(360);
        coffeeMaxValues.setDigestion(60);
        coffeeMaxValues.setToyPlayCount(5);
        coffee.setMaxValues(coffeeMaxValues);
        Stats coffeeStats = new Stats();
        coffeeStats.setHealth(coffeeMaxValues.getHealth());
        coffeeStats.setSatiety(coffeeMaxValues.getSatiety());
        coffeeStats.setMood(coffeeMaxValues.getMood());
        coffeeStats.setDigestion(coffeeMaxValues.getDigestion());
        coffeeStats.setToyPlayCount(coffeeMaxValues.getToyPlayCount());
        coffee.setStats(coffeeStats);
        Stats coffeeStatsReducing = new Stats();
        coffeeStatsReducing.setHealth(1);
        coffeeStatsReducing.setSatiety(1);
        coffeeStatsReducing.setMood(1);
        coffeeStatsReducing.setDigestion(1);
        coffeeStatsReducing.setToyPlayCount(1);
        coffee.setStatsReducing(coffeeStatsReducing);
        MoodStats coffeeMoodStats = new MoodStats(10, 70, 10, 10, 70);
        StatsIncreasing coffeeStatsIncreasing = new StatsIncreasing(1,1,coffeeMoodStats,60);
        coffee.setStatsIncreasing(coffeeStatsIncreasing);
        coffee.setWasTaken(false);
        coffee.setBio("Coffee was born in a small café from a stray mother, who came there for food and shelter. Luckily owners of the café were very helpful. From the first days when  Coffee started to walk, it was clear that it’s a special kitty.  Coffee has a so known wobbly cat syndrome – lack of the movement coordination that results in always looking a bit “drunk”. The café owners spent a lot of time and money trying to help the kitten, but some things just cannot be fixed. But Coffee doesn’t care about this condition and doesn’t feel being different. It’s a happy playful cat, that requires just a little bit more attention than the others.");
        coffee.setType(AnimalType.CATS.getAnimalType());

        Animal donut = new Cat();
        donut.setId("cat-2");
        donut.setName("Donut");
        String donutName = donut.getName().toLowerCase();
        String donutRegularUri = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, donutName, donutName, Constants.IMAGE_EXT);
        String donutSad = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, donutName, UriType.SAD.getUriValue(), Constants.IMAGE_EXT);
        String donutSleeping = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, donutName, UriType.SLEEPING.getUriValue(), Constants.IMAGE_EXT);
        String donutBlinking = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, donutName, UriType.BLINKING.getUriValue(), Constants.IMAGE_EXT);
        String donutDead = Generator.generatePathToFile(Constants.SHORT_PATH_FORMAT, Constants.ASSETS_DEAD_FOLDER, UriType.LONG_HAIR.getUriValue(), Constants.IMAGE_EXT);
        Image donutImage = new Image(donutRegularUri, donutSad, donutSleeping, donutDead, donutBlinking);
        donut.setImg(donutImage);
        donut.setAnimation(lickAnimation);
        Stats donutMaxValues = new Stats();
        donutMaxValues.setHealth(720);
        donutMaxValues.setSatiety(720);
        donutMaxValues.setMood(360);
        donutMaxValues.setDigestion(60);
        donutMaxValues.setToyPlayCount(5);
        donut.setMaxValues(donutMaxValues);
        Stats donutStats = new Stats();
        donutStats.setHealth(donutMaxValues.getHealth());
        donutStats.setSatiety(donutMaxValues.getSatiety());
        donutStats.setMood(donutMaxValues.getMood());
        donutStats.setDigestion(donutMaxValues.getDigestion());
        donutStats.setToyPlayCount(donutMaxValues.getToyPlayCount());
        donut.setStats(donutStats);
        Stats donutStatsReducing = new Stats();
        donutStatsReducing.setHealth(1);
        donutStatsReducing.setSatiety(1);
        donutStatsReducing.setMood(1);
        donutStatsReducing.setDigestion(1);
        donutStatsReducing.setToyPlayCount(1);
        donut.setStatsReducing(donutStatsReducing);
        MoodStats donutMoodStats = new MoodStats(5, 35, 5, 5, 35);
        StatsIncreasing donutStatsIncreasing = new StatsIncreasing(1,1,donutMoodStats,60);
        donut.setStatsIncreasing(donutStatsIncreasing);
        donut.setWasTaken(false);
        donut.setBio("Donut was sold as a purebred sphynx without documents. It didn’t take long for the hair to grow and for the new owners to realize they wasted their money on something they didn’t want. For several days Donut was sitting under the balcony meowing to get family’s attention and couldn’t understand, why it is not possible to come back home from this scary place. After that someone, who saw the whole story, brough Donut to the animal shelter. Donut is selective about the food and has a behavior of a noble cat: never would throw an item from the table, never would steal any food from the human’s plate or dumpster, never would go into the dirty litter box.");
        donut.setType(AnimalType.CATS.getAnimalType());

        Animal lucius = new Cat();
        lucius.setId("cat-3");
        lucius.setName("Lucius");
        String luciusName = lucius.getName().toLowerCase();
        String luciusRegularUri = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, luciusName, luciusName, Constants.IMAGE_EXT);
        String luciusSad = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, luciusName, UriType.SAD.getUriValue(), Constants.IMAGE_EXT);
        String luciusSleeping = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, luciusName, UriType.SLEEPING.getUriValue(), Constants.IMAGE_EXT);
        String luciusBlinking = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, luciusName, UriType.BLINKING.getUriValue(), Constants.IMAGE_EXT);
        String luciusDead = Generator.generatePathToFile(Constants.SHORT_PATH_FORMAT, Constants.ASSETS_DEAD_FOLDER, UriType.LONG_HAIR.getUriValue(), Constants.IMAGE_EXT);
        Image luciusImage = new Image(luciusRegularUri, luciusSad, luciusSleeping, luciusDead, luciusBlinking);
        lucius.setImg(luciusImage);
        lucius.setAnimation(lickAnimation);
        Stats luciusMaxValues = new Stats();
        luciusMaxValues.setHealth(720);
        luciusMaxValues.setSatiety(720);
        luciusMaxValues.setMood(360);
        luciusMaxValues.setDigestion(60);
        luciusMaxValues.setToyPlayCount(5);
        lucius.setMaxValues(luciusMaxValues);
        Stats luciusStats = new Stats();
        luciusStats.setHealth(luciusMaxValues.getHealth());
        luciusStats.setSatiety(luciusMaxValues.getSatiety());
        luciusStats.setMood(luciusMaxValues.getMood());
        luciusStats.setDigestion(luciusMaxValues.getDigestion());
        luciusStats.setToyPlayCount(luciusMaxValues.getToyPlayCount());
        lucius.setStats(luciusStats);
        Stats luciusStatsReducing = new Stats();
        luciusStatsReducing.setHealth(1);
        luciusStatsReducing.setSatiety(1);
        luciusStatsReducing.setMood(1);
        luciusStatsReducing.setDigestion(1);
        luciusStatsReducing.setToyPlayCount(1);
        lucius.setStatsReducing(luciusStatsReducing);
        MoodStats luciusMoodStats = new MoodStats(5, 35, 5, 5, 35);
        StatsIncreasing luciusStatsIncreasing = new StatsIncreasing(1,1,luciusMoodStats,60);
        lucius.setStatsIncreasing(luciusStatsIncreasing);
        lucius.setWasTaken(false);
        lucius.setBio("Lucius was caught by the volunteers for the sterilization. Normally, cats are brought back to the colony after they recover, but Lucius was absolutely deaf, and volunteers decided, it is risky to let such a kitten live in the streets. Being deaf is quite usual for the white cats with the blue eyes. Lucius doesn’t react to any human critics, can sleep even in the middle of the apocalypse and isn’t afraid of the vacuum cleaner. But somehow Lucius always knows when the canned cat food is opened.");
        lucius.setType(AnimalType.CATS.getAnimalType());

        Animal lucky = new Cat();
        lucky.setId("cat-4");
        lucky.setName("Lucky");
        String luckyName = lucky.getName().toLowerCase();
        String luckyRegularUri = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, luckyName, luckyName, Constants.IMAGE_EXT);
        String luckySad = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, luckyName, UriType.SAD.getUriValue(), Constants.IMAGE_EXT);
        String luckySleeping = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, luckyName, UriType.SLEEPING.getUriValue(), Constants.IMAGE_EXT);
        String luckyBlinking = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, luckyName, UriType.BLINKING.getUriValue(), Constants.IMAGE_EXT);
        String luckyDead = Generator.generatePathToFile(Constants.SHORT_PATH_FORMAT, Constants.ASSETS_DEAD_FOLDER, UriType.SHORT_HAIR.getUriValue(), Constants.IMAGE_EXT);
        Image luckyImage = new Image(luckyRegularUri, luckySad, luckySleeping, luckyDead, luckyBlinking);
        lucky.setImg(luckyImage);
        lucky.setAnimation(lickAnimation);
        Stats luckyMaxValues = new Stats();
        luckyMaxValues.setHealth(720);
        luckyMaxValues.setSatiety(720);
        luckyMaxValues.setMood(360);
        luckyMaxValues.setDigestion(60);
        luckyMaxValues.setToyPlayCount(5);
        lucky.setMaxValues(luckyMaxValues);
        Stats luckyStats = new Stats();
        luckyStats.setHealth(luckyMaxValues.getHealth());
        luckyStats.setSatiety(luckyMaxValues.getSatiety());
        luckyStats.setMood(luckyMaxValues.getMood());
        luckyStats.setDigestion(luckyMaxValues.getDigestion());
        luckyStats.setToyPlayCount(luckyMaxValues.getToyPlayCount());
        lucky.setStats(luckyStats);
        Stats luckyStatsReducing = new Stats();
        luckyStatsReducing.setHealth(1);
        luckyMaxValues.setSatiety(1);
        luckyStatsReducing.setMood(1);
        luckyStatsReducing.setDigestion(1);
        luckyStatsReducing.setToyPlayCount(1);
        lucky.setStatsReducing(luckyStatsReducing);
        MoodStats luckyMoodStats = new MoodStats(5, 35, 5, 5, 35);
        StatsIncreasing luckyStatsIncreasing = new StatsIncreasing(1,1,luckyMoodStats,60);
        lucky.setStatsIncreasing(luckyStatsIncreasing);
        lucky.setWasTaken(false);
        lucky.setBio("Lucky suddenly appeared in front of a car in the middle of a forest road. Far away from the civilization, completely alone. The driver, who found this ball of black fur, took a long walk around the place, but hasn’t noticed any house or a stray cat family. Just an opened backpack, that smelled of cat piss. Lucky was smelly too and covered in pine needles. The kitten hopped into the car without invitation, and sat in the front seat, periodically turning his head to check, if savior is still around. Lucky indeed.");
        lucky.setType(AnimalType.CATS.getAnimalType());

        Animal meesha = new Cat();
        meesha.setId("cat-5");
        meesha.setName("Meesha");
        String meeshaName = meesha.getName().toLowerCase();
        String meeshaRegularUri = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, meeshaName, meeshaName, Constants.IMAGE_EXT);
        String meeshaSad = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, meeshaName, UriType.SAD.getUriValue(), Constants.IMAGE_EXT);
        String meeshaSleeping = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, meeshaName, UriType.SLEEPING.getUriValue(), Constants.IMAGE_EXT);
        String meeshaBlinking = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, meeshaName, UriType.BLINKING.getUriValue(), Constants.IMAGE_EXT);
        String meeshaCurledUp = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, meeshaName, UriType.CURLED_UP.getUriValue(), Constants.IMAGE_EXT);
        String meeshaSausage = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, meeshaName, UriType.SAUSAGE.getUriValue(), Constants.IMAGE_EXT);
        String meeshaDead = Generator.generatePathToFile(Constants.SHORT_PATH_FORMAT, Constants.ASSETS_DEAD_FOLDER, UriType.SHORT_HAIR.getUriValue(), Constants.IMAGE_EXT);
        Image meeshaImage = new Image(meeshaRegularUri, meeshaSad, meeshaSleeping, meeshaDead, meeshaBlinking);
        meeshaImage.setCurledUp(new RoomPet(meeshaCurledUp));
        meeshaImage.setSausage(new RoomPet(meeshaSausage));
        meesha.setImg(meeshaImage);
        meesha.setAnimation(lickAnimation);
        Stats meeshaMaxValues = new Stats();
        meeshaMaxValues.setHealth(1500);
        meeshaMaxValues.setSatiety(720);
        meeshaMaxValues.setMood(360);
        meeshaMaxValues.setDigestion(60);
        meeshaMaxValues.setToyPlayCount(5);
        meesha.setMaxValues(meeshaMaxValues);
        Stats meeshaStats = new Stats();
        meeshaStats.setHealth(meeshaMaxValues.getHealth());
        meeshaStats.setSatiety(meeshaMaxValues.getSatiety());
        meeshaStats.setMood(meeshaMaxValues.getMood());
        meeshaStats.setDigestion(meeshaMaxValues.getDigestion());
        meeshaStats.setToyPlayCount(meeshaMaxValues.getToyPlayCount());
        meesha.setStats(meeshaStats);
        Stats meeshaStatsReducing = new Stats();
        meeshaStatsReducing.setHealth(1);
        meeshaStatsReducing.setSatiety(1);
        meeshaStatsReducing.setMood(1);
        meeshaStatsReducing.setDigestion(1);
        meeshaStatsReducing.setToyPlayCount(1);
        meesha.setStatsReducing(meeshaStatsReducing);
        MoodStats meeshaMoodStats = new MoodStats(5, 35, 5, 5, 35);
        StatsIncreasing meeshaStatsIncreasing = new StatsIncreasing(1,1,meeshaMoodStats,60);
        meesha.setStatsIncreasing(meeshaStatsIncreasing);
        meesha.setWasTaken(false);
        meesha.setBio("Meesha was born in the summer house from a cat that children fed in their garden. Real stray kitten, who hissed at the humans and run away if someone tried to come closer. Nevertheless, Meesha knew every house, where people gladly shared their food with the homeless kittens, and always checked them all, living the best life. But happy summer ended with the autumn coming. People started to leave to the city. The village became empty. And it was scary. Much scarier than trying to befriend a human and Meesha came to the door of one of the last families still being here, meowing and asking to let in.");
        meesha.setType(AnimalType.CATS.getAnimalType());

        Animal muffin = new Cat();
        muffin.setId("cat-6");
        muffin.setName("Muffin");
        String muffinName = muffin.getName().toLowerCase();
        String muffinRegularUri = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, muffinName, muffinName, Constants.IMAGE_EXT);
        String muffinSad = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, muffinName, UriType.SAD.getUriValue(), Constants.IMAGE_EXT);
        String muffinSleeping = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, muffinName, UriType.SLEEPING.getUriValue(), Constants.IMAGE_EXT);
        String muffinBlinking = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, muffinName, UriType.BLINKING.getUriValue(), Constants.IMAGE_EXT);
        String muffinDead = Generator.generatePathToFile(Constants.SHORT_PATH_FORMAT, Constants.ASSETS_DEAD_FOLDER, UriType.SHORT_HAIR.getUriValue(), Constants.IMAGE_EXT);
        Image muffinImage = new Image(muffinRegularUri, muffinSad, muffinSleeping, muffinDead, muffinBlinking);
        muffin.setImg(muffinImage);
        muffin.setAnimation(lickAnimation);
        Stats muffinMaxValues = new Stats();
        muffinMaxValues.setHealth(720);
        muffinMaxValues.setSatiety(720);
        muffinMaxValues.setMood(360);
        muffinMaxValues.setDigestion(60);
        muffinMaxValues.setToyPlayCount(5);
        muffin.setMaxValues(muffinMaxValues);
        Stats muffinStats = new Stats();
        muffinStats.setHealth(muffinStats.getHealth());
        muffinStats.setSatiety(muffinStats.getSatiety());
        muffinStats.setMood(muffinStats.getMood());
        muffinStats.setDigestion(muffinStats.getDigestion());
        muffinStats.setToyPlayCount(muffinMaxValues.getToyPlayCount());
        muffin.setStats(muffinStats);
        Stats muffinStatsReducing = new Stats();
        muffinStatsReducing.setHealth(1);
        muffinStatsReducing.setSatiety(1);
        muffinStatsReducing.setMood(1);
        muffinStatsReducing.setDigestion(1);
        muffinStatsReducing.setToyPlayCount(1);
        muffin.setStatsReducing(muffinStatsReducing);
        MoodStats muffinMoodStats = new MoodStats(5, 35, 5, 5, 35);
        StatsIncreasing muffinStatsIncreasing = new StatsIncreasing(1,1,muffinMoodStats,60);
        muffin.setStatsIncreasing(muffinStatsIncreasing);
        muffin.setWasTaken(false);
        muffin.setBio("Owners refused to neuter their cat, as, according to them, it is not natural and is also bad for her health, so she periodically gives birth. After that the owners have drown the kittens. This time mother found a good place to hide her only child, so the little one was only found after its’ eyes opened. Kitten was packed into a box and thrown into the nearest shelter’s territory. Shelter workers called the kitten Muffin.");
        muffin.setType(AnimalType.CATS.getAnimalType());

        Animal owl = new Cat();
        owl.setId("cat-7");
        owl.setName("Owl");
        String owlName = owl.getName().toLowerCase();
        String owlRegularUri = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, owlName, owlName, Constants.IMAGE_EXT);
        String owlSad = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, owlName, UriType.SAD.getUriValue(), Constants.IMAGE_EXT);
        String owlSleeping = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, owlName, UriType.SLEEPING.getUriValue(), Constants.IMAGE_EXT);
        String owlBlinking = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, owlName, UriType.BLINKING.getUriValue(), Constants.IMAGE_EXT);
        String owlDead = Generator.generatePathToFile(Constants.SHORT_PATH_FORMAT, Constants.ASSETS_DEAD_FOLDER, UriType.FOLDED_EARS.getUriValue(), Constants.IMAGE_EXT);
        Image owlImage = new Image(owlRegularUri, owlSad, owlSleeping, owlDead, owlBlinking);
        owl.setImg(owlImage);
        owl.setAnimation(lickAnimation);
        Stats owlMaxValues = new Stats();
        owlMaxValues.setHealth(720);
        owlMaxValues.setSatiety(720);
        owlMaxValues.setMood(360);
        owlMaxValues.setDigestion(60);
        owlMaxValues.setToyPlayCount(5);
        owl.setMaxValues(owlMaxValues);
        Stats owlStats = new Stats();
        owlStats.setHealth(owlMaxValues.getHealth());
        owlStats.setSatiety(owlMaxValues.getSatiety());
        owlStats.setMood(owlMaxValues.getMood());
        owlStats.setDigestion(owlMaxValues.getDigestion());
        owlStats.setToyPlayCount(owlMaxValues.getToyPlayCount());
        owl.setStats(owlStats);
        Stats owlStatsReducing = new Stats();
        owlStatsReducing.setHealth(1);
        owlStatsReducing.setSatiety(1);
        owlStatsReducing.setMood(1);
        owlStatsReducing.setDigestion(1);
        owlStatsReducing.setToyPlayCount(1);
        owl.setStatsReducing(owlStatsReducing);
        MoodStats owlMoodStats = new MoodStats(5, 35, 5, 5, 35);
        StatsIncreasing owlStatsIncreasing = new StatsIncreasing(1,1,owlMoodStats,60);
        owl.setStatsIncreasing(owlStatsIncreasing);
        owl.setWasTaken(false);
        owl.setBio("Owl is a purebred Scottish fold – a beautiful silver chinchilla with turquoise eyes and small ears. Almost whole life Owl spent in a dirty rusted cage in a kitten mill, producing dozens of offsprings. Fortunately, this place was found by the volunteers, who called the police and all the cats were taken to the vet and into a better shelter. Owl has weak paws with illegally removed nails, some chronic stomach disease and is not used to being a pet. Therefore, most of the time Owls spends lying on the windowsill looking at the sky, trees and birds. And sometimes even allows humans to stand nearby.");
        owl.setType(AnimalType.CATS.getAnimalType());

        Animal picasso = new Cat();
        picasso.setId("cat-8");
        picasso.setName("Picasso");
        String picassoName = picasso.getName().toLowerCase();
        String picassoRegularUri = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, picassoName, picassoName, Constants.IMAGE_EXT);
        String picassoSad = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, picassoName, UriType.SAD.getUriValue(), Constants.IMAGE_EXT);
        String picassoSleeping = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, picassoName, UriType.SLEEPING.getUriValue(), Constants.IMAGE_EXT);
        String picassoBlinking = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, picassoName, UriType.BLINKING.getUriValue(), Constants.IMAGE_EXT);
        String picassoDead = Generator.generatePathToFile(Constants.SHORT_PATH_FORMAT, Constants.ASSETS_DEAD_FOLDER, UriType.SHORT_HAIR.getUriValue(), Constants.IMAGE_EXT);
        Image picassoImage = new Image(picassoRegularUri, picassoSad, picassoSleeping, picassoDead, picassoBlinking);
        picasso.setImg(picassoImage);
        picasso.setAnimation(lickAnimation);
        Stats picassoMaxValues = new Stats();
        picassoMaxValues.setHealth(720);
        picassoMaxValues.setSatiety(720);
        picassoMaxValues.setMood(360);
        picassoMaxValues.setDigestion(60);
        picassoMaxValues.setToyPlayCount(5);
        picasso.setMaxValues(picassoMaxValues);
        Stats picassoStats = new Stats();
        picassoStats.setHealth(picassoMaxValues.getHealth());
        picassoStats.setSatiety(picassoMaxValues.getSatiety());
        picassoStats.setMood(picassoMaxValues.getMood());
        picassoStats.setDigestion(picassoMaxValues.getDigestion());
        picassoStats.setToyPlayCount(picassoMaxValues.getToyPlayCount());
        picasso.setStats(picassoStats);
        Stats picassoStatsReducing = new Stats();
        picassoStatsReducing.setHealth(1);
        picassoStatsReducing.setSatiety(1);
        picassoStatsReducing.setMood(1);
        picassoStatsReducing.setDigestion(1);
        picassoStatsReducing.setToyPlayCount(1);
        picasso.setStatsReducing(picassoStatsReducing);
        MoodStats picassoMoodStats = new MoodStats(5, 35, 5, 5, 35);
        StatsIncreasing picassoStatsIncreasing = new StatsIncreasing(1,1,picassoMoodStats,60);
        picasso.setStatsIncreasing(picassoStatsIncreasing);
        picasso.setWasTaken(false);
        picasso.setBio("For many years Picasso used to be the companion of the old lady. Quite home without any children or other animals, where Picasso spent the days sleeping, looking through the window and purring to the bellowed human. And always getting the most delicious pieces of food right from the table. Unfortunately, sometimes owners pass away earlier than their pets. Right now, Picasso is stressed and confused. Not old yet but losing the “cuteness contest” to the kittens and having troubles to adapt to the new home quickly.");
        picasso.setType(AnimalType.CATS.getAnimalType());

        Animal qwerty = new Cat();
        qwerty.setId("cat-9");
        qwerty.setName("Qwerty");
        String qwertyName = qwerty.getName().toLowerCase();
        String qwertyRegularUri = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, qwertyName, qwertyName, Constants.IMAGE_EXT);
        String qwertySad = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, qwertyName, UriType.SAD.getUriValue(), Constants.IMAGE_EXT);
        String qwertySleeping = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, qwertyName, UriType.SLEEPING.getUriValue(), Constants.IMAGE_EXT);
        String qwertyBlinking = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, qwertyName, UriType.BLINKING.getUriValue(), Constants.IMAGE_EXT);
        String qwertyCurledUp = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, qwertyName, UriType.CURLED_UP.getUriValue(), Constants.IMAGE_EXT);
        String qwertySausage = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, qwertyName, UriType.SAUSAGE.getUriValue(), Constants.IMAGE_EXT);
        String qwertyDead = Generator.generatePathToFile(Constants.SHORT_PATH_FORMAT, Constants.ASSETS_DEAD_FOLDER, UriType.SHORT_HAIR.getUriValue(), Constants.IMAGE_EXT);
        Image qwertyImage = new Image(qwertyRegularUri, qwertySad, qwertySleeping, qwertyDead, qwertyBlinking);
        qwertyImage.setCurledUp(new RoomPet(qwertyCurledUp));
        qwertyImage.setSausage(new RoomPet(qwertySausage));
        qwerty.setImg(qwertyImage);
        qwerty.setAnimation(lickAnimation);
        Stats qwertyMaxValues = new Stats();
        qwertyMaxValues.setHealth(1500);
        qwertyMaxValues.setSatiety(720);
        qwertyMaxValues.setMood(360);
        qwertyMaxValues.setDigestion(60);
        qwertyMaxValues.setToyPlayCount(5);
        qwerty.setMaxValues(qwertyMaxValues);
        Stats qwertyStats = new Stats();
        qwertyStats.setHealth(qwertyMaxValues.getHealth());
        qwertyStats.setSatiety(qwertyMaxValues.getSatiety());
        qwertyStats.setMood(qwertyMaxValues.getMood());
        qwertyStats.setDigestion(qwertyMaxValues.getDigestion());
        qwertyStats.setToyPlayCount(qwertyMaxValues.getToyPlayCount());
        qwerty.setStats(qwertyStats);
        Stats qwertyStatsReducing = new Stats();
        qwertyStatsReducing.setHealth(1);
        qwertyStatsReducing.setSatiety(1);
        qwertyStatsReducing.setMood(1);
        qwertyStatsReducing.setDigestion(1);
        qwertyStatsReducing.setToyPlayCount(1);
        qwerty.setStatsReducing(qwertyStatsReducing);
        MoodStats qwertyMoodStats = new MoodStats(5, 35, 5, 5, 35);
        StatsIncreasing qwertyStatsIncreasing = new StatsIncreasing(1,1,qwertyMoodStats,60);
        qwerty.setStatsIncreasing(qwertyStatsIncreasing);
        qwerty.setWasTaken(false);
        qwerty.setBio("Shelter employees sometimes say Qwerty is cursed. Qwerty was first adopted as a little kitten, but even a month hasn’t passed, until the owners came back and said they appeared to be allergic to cats. It wasn’t long until new home was found, but just a few weeks later Qwerty was returned to the shelter after breaking very expensive vase. Third family kept Qwerty for almost a year, but then they decided to move to another country and claimed it wouldn’t be possible to take the cat there. Qwerty doesn’t lose hope to get adopted forever, purring and offering to pet the belly to everybody, who is coming to the shelter.");
        qwerty.setType(AnimalType.CATS.getAnimalType());

        Animal sammy = new Cat();
        sammy.setId("cat-10");
        sammy.setName("Sammy");
        String sammyName = sammy.getName().toLowerCase();
        String sammyRegularUri = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, sammyName, sammyName, Constants.IMAGE_EXT);
        String sammySad = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, sammyName, UriType.SAD.getUriValue(), Constants.IMAGE_EXT);
        String sammySleeping = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, sammyName, UriType.SLEEPING.getUriValue(), Constants.IMAGE_EXT);
        String sammyBlinking = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, sammyName, UriType.BLINKING.getUriValue(), Constants.IMAGE_EXT);
        String sammyCurledUp = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, sammyName, UriType.CURLED_UP.getUriValue(), Constants.IMAGE_EXT);
        String sammySausage = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, sammyName, UriType.SAUSAGE.getUriValue(), Constants.IMAGE_EXT);
        String sammyDead = Generator.generatePathToFile(Constants.SHORT_PATH_FORMAT, Constants.ASSETS_DEAD_FOLDER, UriType.LONG_HAIR.getUriValue(), Constants.IMAGE_EXT);
        Image sammyImage = new Image(sammyRegularUri, sammySad, sammySleeping, sammyDead, sammyBlinking);
        sammyImage.setCurledUp(new RoomPet(sammyCurledUp));
        sammyImage.setSausage(new RoomPet(sammySausage));
        sammy.setImg(sammyImage);
        sammy.setAnimation(lickAnimation);
        Stats sammyMaxValues = new Stats();
        sammyMaxValues.setHealth(1500);
        sammyMaxValues.setSatiety(720);
        sammyMaxValues.setMood(360);
        sammyMaxValues.setDigestion(60);
        sammyMaxValues.setToyPlayCount(5);
        sammy.setMaxValues(sammyMaxValues);
        Stats sammyStats = new Stats();
        sammyStats.setHealth(sammyMaxValues.getHealth());
        sammyStats.setSatiety(sammyMaxValues.getSatiety());
        sammyStats.setMood(sammyMaxValues.getMood());
        sammyStats.setDigestion(sammyMaxValues.getDigestion());
        sammyStats.setToyPlayCount(sammyMaxValues.getToyPlayCount());
        sammy.setStats(sammyStats);
        Stats sammyStatsReducing = new Stats();
        sammyStatsReducing.setHealth(1);
        sammyStatsReducing.setSatiety(1);
        sammyStatsReducing.setMood(1);
        sammyStatsReducing.setDigestion(1);
        sammyStatsReducing.setToyPlayCount(1);
        sammy.setStatsReducing(sammyStatsReducing);
        MoodStats sammyMoodStats = new MoodStats(5, 35, 5, 5, 35);
        StatsIncreasing sammyStatsIncreasing = new StatsIncreasing(1,1,sammyMoodStats,60);
        sammy.setStatsIncreasing(sammyStatsIncreasing);
        sammy.setWasTaken(false);
        sammy.setBio("Some adult noticed a screaming and hissing box in the hands of a group of the children. One of them said, there is a kitten inside, and mom doesn’t allow to keep it because of the allergies. The adult asked, if it would be then possible to get the kitten. At first children declined the offer, claiming they were planning to build a house for the cat in the basement, but then agreed to exchange it for some money to buy ice-cream. “It’s not very friendly” – they warned handing the box to the new owner – “It scratches and bites”. At the adult’s home kitten was sitting under the couch for almost a week. Sammy is still afraid of loud noises and children, but otherwise it’s one of the loveliest cats in the universe.");
        sammy.setType(AnimalType.CATS.getAnimalType());

        Animal houdini = new Cat();
        houdini.setId("cat-11");
        houdini.setName("Houdini");
        String houdiniName = houdini.getName().toLowerCase();
        String houdiniRegularUri = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, houdiniName, houdiniName, Constants.IMAGE_EXT);
        String houdiniSad = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, houdiniName, UriType.SAD.getUriValue(), Constants.IMAGE_EXT);
        String houdiniSleeping = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, houdiniName, UriType.SLEEPING.getUriValue(), Constants.IMAGE_EXT);
        String houdiniBlinking = Generator.generatePathToFile(Constants.LONG_PATH_FORMAT, Constants.ASSETS_CATS_FOLDER, houdiniName, UriType.BLINKING.getUriValue(), Constants.IMAGE_EXT);
        String houdiniDead = Generator.generatePathToFile(Constants.SHORT_PATH_FORMAT, Constants.ASSETS_DEAD_FOLDER, UriType.SHORT_HAIR.getUriValue(), Constants.IMAGE_EXT);
        Image houdiniImage = new Image(houdiniRegularUri, houdiniSad, houdiniSleeping, houdiniDead, houdiniBlinking);
        houdini.setImg(houdiniImage);
        houdini.setAnimation(lickAnimation);
        Stats houdiniMaxValues = new Stats();
        houdiniMaxValues.setHealth(720);
        houdiniMaxValues.setSatiety(720);
        houdiniMaxValues.setMood(360);
        houdiniMaxValues.setDigestion(60);
        houdiniMaxValues.setToyPlayCount(5);
        houdini.setMaxValues(houdiniMaxValues);
        Stats houdiniStats = new Stats();
        houdiniStats.setHealth(houdiniMaxValues.getHealth());
        houdiniStats.setSatiety(houdiniMaxValues.getSatiety());
        houdiniStats.setMood(houdiniMaxValues.getMood());
        houdiniStats.setDigestion(houdiniMaxValues.getDigestion());
        houdiniStats.setToyPlayCount(houdiniMaxValues.getToyPlayCount());
        houdini.setStats(houdiniStats);
        Stats houdiniStatsReducing = new Stats();
        houdiniStatsReducing.setHealth(1);
        houdiniStatsReducing.setSatiety(1);
        houdiniStatsReducing.setMood(1);
        houdiniStatsReducing.setDigestion(1);
        houdiniStatsReducing.setToyPlayCount(1);
        houdini.setStatsReducing(houdiniStatsReducing);
        MoodStats houdiniMoodStats = new MoodStats(5, 35, 5, 5, 35);
        StatsIncreasing houdiniStatsIncreasing = new StatsIncreasing(1,1,houdiniMoodStats,60);
        houdini.setStatsIncreasing(houdiniStatsIncreasing);
        houdini.setWasTaken(false);
        houdini.setBio("Houdini is the sole survivor from the litter of kittens thrown into a dumpster in a closed box. Someone ensured, they wouldn’t make it out alive, securing the box with enormous amount of sticky tape. But Houdini was loud enough to be heard by a passing by human. Hungry, dehydrated and ill, Houdini was brought to the veterinary clinic. One eye lost the fight to the virus, the other one is left with impaired vision. But guess what – Houdini hasn’t lost faith in humanity. It’s a joyful and loving kitty ready to sleep on the lap of the human buddy forever. With just the small breaks for fun and food, of course.");
        houdini.setType(AnimalType.CATS.getAnimalType());

//        cats.add(coffee);
//        cats.add(donut);
//        cats.add(lucius);
//        cats.add(lucky);
        cats.add(meesha);
//        cats.add(muffin);
//        cats.add(owl);
//        cats.add(picasso);
        cats.add(qwerty);
        cats.add(sammy);
//        cats.add(houdini);

        return cats;
    }
}
